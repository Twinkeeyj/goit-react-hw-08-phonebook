{"version":3,"sources":["components/UserMenu/UserMenu.js","components/loading/loading.js","App.js","redux/listReducer.js","redux/auth/authReducer.js","redux/store.js","index.js","components/AnswerError/AnswerError.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","views/ContactsView.js","redux/listActions.js","redux/contacts/contactsOperation.js","redux/listSelector.js","components/ContactForm/ContactForm.module.css","route.js","redux/auth/authOperations.js","components/ContactList/ContactList.module.css","App.module.css","redux/auth/authActions.js"],"names":["connect","state","name","auth","user","avatar","onLogout","authOperations","logOut","src","alt","width","type","onClick","Loaders","color","height","timeout","React","Component","AsynkHomeView","lazy","AsynkLoginView","AsynkRegisterView","AsynkContactsView","App","this","props","onGetCurrentUser","fallback","isAuthenticated","exact","path","routes","HomeView","component","LoginView","ContactsView","RegisterView","to","token","getCurrentUser","initialState","items","createReducer","listAction","addListSuccess","action","payload","fetchListSuccess","_","removeListSuccess","filter","contact","id","filterContact","loading","addListRequest","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","getCurrentUserSuccess","logoutSuccess","error","registerError","loginError","logoutError","getCurrentUserError","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","document","getElementById","AnswerError","isVisible","CSSTransition","in","classNames","unmountOnExit","className","ContactForm","number","handleChange","target","setState","value","handleSubmit","event","preventDefault","list","some","setTimeout","addContact","classes","container","onSubmit","label","htmlFor","required","input","placeholder","onChange","mapDispatchToProps","newContact","selector","getForm","ContactList","TransitionGroup","map","el","button","delete","contactsOperation","removeContact","getList","filterRender","getFilter","e","onFetchContact","history","replace","appear","Filter","contactsOperations","fetchContact","createAction","addListError","fetchListRequest","fetchListError","removeListRequest","removeListError","axios","defaults","baseURL","dispatch","then","catch","post","response","data","get","getLoding","toLowerCase","includes","module","exports","way","headers","common","Authorization","register","credentials","registerRequest","logoutRequest","logIn","loginRequest","getState","persistedToken","getCurrentUserRequest"],"mappings":"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","file":"static/js/main.f50786ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport authOperations from \"../../redux/auth/authOperations\"\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div >\r\n    <img src={avatar} alt=\"Твоє фото мудак!!!!!\" width=\"32\"  />\r\n    <span >Welcome, {name}</span>\r\n\r\n    <button type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  name: state.auth.user.name,\r\n  avatar:\r\n    'https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/ea/ea25bf27b1917865960af3c6e2364c29b83f58bd_full.jpg',\r\n});\r\n\r\nexport default connect(mapStateToProps, { onLogout: authOperations.logOut })(\r\n  UserMenu,\r\n);\r\n\r\n","import Loader from 'react-loader-spinner';\r\nimport React from 'react';\r\n\r\nexport default class Loaders extends React.Component {\r\n \r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}","import contactsOperation from './redux/contacts/contactsOperation';\r\nimport selector from './redux/listSelector';\r\nimport ContactsView from './views/ContactsView';\r\nimport classes from './App.module.css';\r\nimport React, { Component, lazy, Suspense } from 'react';\r\nimport {BrowserRouter, Redirect, Route, Switch, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport routes from './route';\r\nimport UserMenu from \"./components/UserMenu/UserMenu\"\r\nimport authOperations from \"./redux/auth/authOperations\"\r\nimport Loader from \"./components/loading/loading\"\r\n\r\nconst AsynkHomeView = lazy(() => import('./views/HomeView'));\r\nconst AsynkLoginView = lazy(() => import('./views/LoginView'));\r\nconst AsynkRegisterView = lazy(() => import('./views/RegisterView'));\r\nconst AsynkContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <>\r\n\r\n      <BrowserRouter>\r\n      <Suspense fallback={<><Loader/><h3>Loading...</h3></>}>\r\n       {this.props.isAuthenticated && <UserMenu/>}\r\n\r\n\r\n\r\n            <Switch>\r\n            <Route\r\n              exact\r\n              path={routes.HomeView}\r\n              component={AsynkHomeView}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.LoginView}\r\n              component={AsynkLoginView}\r\n            />\r\n            <Route\r\n              exact\r\n              path={routes.ContactsView}\r\n              component={AsynkContactsView}\r\n            />\r\n            <Route\r\n              path={routes.RegisterView}\r\n              component={AsynkRegisterView}\r\n            />\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </Suspense>\r\n        </BrowserRouter>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated: state.auth.token,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n\r\n})(App);\r\n\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport listAction from './listActions';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filter: '',\r\n};\r\n\r\nconst newContact = (state, action) => [...state, action.payload];\r\n\r\nconst removeAnyContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst items = createReducer(initialState.contacts, {\r\n  [listAction.addListSuccess]: newContact,\r\n  [listAction.fetchListSuccess]: (_, action) => action.payload,\r\n  [listAction.removeListSuccess]: removeAnyContact,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n  [listAction.filterContact]: (_, action) => action.payload,\r\n});\r\nconst loading = createReducer(false, {\r\n  [listAction.addListRequest]: () => true,\r\n  [listAction.addListSuccess]: () => false,\r\n});\r\n// const error = createReducer(null);\r\n\r\nexport default combineReducers({ items, filter, loading });\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './authActions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});","import contactsReducer from './listReducer';\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","// import React from 'react';\r\n// import ReactDOM from 'react-dom';\r\n// import './index.css';\r\n// import App from './App';\r\n// import { Provider } from 'react-redux';\r\n// import store from './redux/store';\r\n\r\n\r\n// ReactDOM.render(\r\n//   <Provider store={store}>\r\n//     <App />\r\n//   </Provider>,\r\n//   document.getElementById('root'),\r\n// );\r\n\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\n// import store from './redux/store';\r\n\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { store, persistor } from './redux/store';\r\n\r\n// console.log(store,persistor);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);","import React from 'react';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../../index.css';\r\n\r\nconst AnswerError = ({ isVisible }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isVisible}\r\n      timeout={250}\r\n      classNames=\"answer\"\r\n      unmountOnExit\r\n    >\r\n      <div className=\"answerContainer\">\r\n        <p>Contact already declared</p>\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default AnswerError;\r\n","import React, { Component } from 'react';\r\nimport classes from './ContactForm.module.css';\r\nimport { connect } from 'react-redux';\r\nimport newContact from '../../redux/contacts/contactsOperation';\r\nimport AnswerError from '../AnswerError/AnswerError';\r\nimport selector from \"../../redux/listSelector\"\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    isVisible: false,\r\n      };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const truly = this.props.list.some(\r\n      contact => contact.name === this.state.name,\r\n    );\r\n    if (truly) {\r\n      this.setState({\r\n        isVisible: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          isVisible: false,\r\n        });\r\n      }, 1500);\r\n      return;\r\n    }\r\n    this.props.addContact({ ...this.state });\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isVisible } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div>\r\n          <AnswerError isVisible={isVisible}  />\r\n        </div>\r\n\r\n        <form\r\n          className={classes.container}\r\n          action=\"\"\r\n          onSubmit={this.handleSubmit}\r\n        >\r\n          <label className={classes.label} htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n          required\r\n            className={classes.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <label className={classes.label} htmlFor=\"number\">\r\n            Number\r\n          </label>\r\n          <input\r\n          required\r\n            className={classes.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            placeholder=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n          <input  type=\"submit\" value=\"Add contact\"  />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  list: selector.getForm(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: newContact.addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classes from './ContactList.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperation from '../../redux/contacts/contactsOperation';\r\nimport selector from \"../../redux/listSelector\"\r\n\r\nclass ContactList extends Component {\r\n  \r\n  render() {\r\n     return (\r\n      <>\r\n        <TransitionGroup component=\"ul\" className={classes.container}>\r\n          {this.props.list.map(el => {\r\n            return (\r\n              <CSSTransition key={el.id} classNames=\"showbutton\" timeout={250}>\r\n                <li key={el.id} className={classes.list}>\r\n                  {el.name} : {el.number}\r\n                  <button\r\n                    className={classes.button}\r\n                    type=\"button\"\r\n                    onClick={() => this.props.delete(el.id)}\r\n                  >\r\n                    Удалить\r\n                  </button>\r\n                </li>\r\n              </CSSTransition>\r\n            );\r\n          })}\r\n        </TransitionGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  delete: PropTypes.func.isRequired,\r\n  list: PropTypes.array.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  list: selector.getList(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  delete: contactsOperation.removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport listAction from '../../redux/listActions';\r\nimport selector from \"../../redux/listSelector\"\r\n\r\n\r\nconst FilterName = ({ filterRender, filter }) => (\r\n  <div>\r\n    <label>Find contacts by name</label>\r\n    <input\r\n      type=\"text\"\r\n      value={filter}\r\n      onChange={e => filterRender(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilterName.propTypes = {\r\n  filterRender: PropTypes.func.isRequired,\r\n  filter: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state =>\r\n({\r\n  filter: selector.getFilter(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  filterRender: listAction.filterContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterName);\r\n","import React, { Component } from 'react'\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport classes from '../App.module.css';\r\n\r\n\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport ContactList from '../components/ContactList/ContactList';\r\nimport Filter from '../components/Filter/Filter';\r\nimport { connect } from 'react-redux';\r\nimport contactsOperations from \"../redux/contacts/contactsOperation\"\r\n\r\n class ContactsView extends Component {\r\n  componentDidMount(){\r\n    if(!this.props.isAuthenticated){\r\n      this.props.history.replace(\"/\")\r\n\r\n      return\r\n    }\r\n    this.props.onFetchContact()\r\n  }\r\n  componentDidUpdate(){\r\n    if(!this.props.isAuthenticated){\r\n      this.props.history.replace(\"/\")\r\n\r\n      return\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.container}>\r\n\r\n      <CSSTransition\r\n            in={true}\r\n            classNames=\"logo\"\r\n            timeout={250}\r\n            appear={true}\r\n            unmountOnExit\r\n          >\r\n            <h1>Phonebook</h1>\r\n          </CSSTransition>\r\n          <ContactForm />\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated: state.auth.token,\r\n})\r\n\r\nconst mapDispatchToProps={\r\n  onFetchContact: contactsOperations.fetchContact\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addListRequest = createAction('contacts/addRequest');\r\nconst addListSuccess = createAction('contacts/addSuccess');\r\nconst addListError = createAction('contacts/addError');\r\n\r\nconst fetchListRequest = createAction('contacts/fetchRequest');\r\nconst fetchListSuccess = createAction('contacts/fetchSuccess');\r\nconst fetchListError = createAction('contacts/fetchError');\r\n\r\nconst removeListRequest = createAction('contacts/removeRequest');\r\nconst removeListSuccess = createAction('contacts/removeSuccess');\r\nconst removeListError = createAction('contacts/removeError');\r\n\r\n\r\nconst filterContact = createAction('FILTER_CONTACTS');\r\n\r\n\r\nexport default {\r\n  removeListError,\r\n  removeListSuccess,\r\n  removeListRequest,\r\n\r\n  filterContact,\r\n\r\n  addListRequest,\r\n  addListSuccess,\r\n  addListError,\r\n\r\n  fetchListRequest,\r\n  fetchListSuccess,\r\n  fetchListError,\r\n};\r\n","import listAction from '../listActions';\r\nimport axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  dispatch(listAction.addListRequest());\r\n  axios\r\n    .post('/contacts', { name, number})\r\n    .then(response => {\r\n      dispatch(listAction.addListSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(listAction.addListError(error)));\r\n};\r\n\r\nconst fetchContact = () => dispatch => {\r\n  dispatch(listAction.fetchListRequest());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => {\r\n      dispatch(listAction.fetchListSuccess(data));\r\n    })\r\n    .catch(error => dispatch(listAction.fetchListError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(listAction.removeListRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => {\r\n      dispatch(listAction.removeListSuccess(id));\r\n    })\r\n    .catch(error => dispatch(listAction.removeListError(error)));\r\n};\r\n\r\n\r\nexport default {\r\n  removeContact,\r\n  addContact,\r\n  fetchContact,\r\n};\r\n\r\n\r\n// https://goit-phonebook-api.herokuapp.com/","const getLoding = state => state.contacts.loading;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getForm = state => state.contacts.items;\r\n\r\nconst getList = state =>\r\n  state.contacts.items.filter(contact =>\r\n    contact.name.toLowerCase().includes(state.contacts.filter.toLowerCase())\r\n  );\r\n\r\nexport default {\r\n  getLoding,\r\n  getFilter,\r\n  getForm,\r\n  getList,\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3tnp5\",\"label\":\"ContactForm_label__3h9Ix\",\"input\":\"ContactForm_input__4oMAT\"};","const way={\r\n  HomeView: \"/\",\r\n  LoginView: \"/login\",\r\n  RegisterView: \"/register\",\r\n  ContactsView: \"/contacts\"\r\n}\r\nexport default way","import axios from 'axios';\r\nimport authActions from './authActions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  axios\r\n    .post('/users/signup', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.registerSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error)));\r\n};\r\n\r\nconst logIn = credentials => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  axios\r\n    .post('/users/login', credentials)\r\n    .then(response => {\r\n      token.set(response.data.token);\r\n      dispatch(authActions.loginSuccess(response.data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => dispatch(authActions.getCurrentUserSuccess(data)))\r\n    .catch(error => authActions.getCurrentUserError(error));\r\n};\r\n\r\nconst logOut = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error)));\r\n};\r\n\r\nexport default { register, logOut, logIn, getCurrentUser };\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2J0el\",\"list\":\"ContactList_list__CCvTN\",\"button\":\"ContactList_button__2GTzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2MweG\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};"],"sourceRoot":""}