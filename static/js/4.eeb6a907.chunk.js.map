{"version":3,"sources":["views/LoginView.js"],"names":["LoginView","state","email","password","handleChange","target","name","value","setState","handleSubmit","e","preventDefault","props","onLogin","this","isAuthenticated","history","replace","to","route","HomeView","onSubmit","type","onChange","Component","connect","auth","token","authOperations","logIn"],"mappings":"wPAMOA,E,4MACLC,MAAQ,CACNC,MAAO,GACPC,SAAU,I,EAiBZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBF,EAAOC,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,QAAX,eAAwB,EAAKZ,QAC7B,EAAKO,SAAS,CAAEF,KAAM,GAAIJ,MAAO,GAAIC,SAAU,M,kEAtB5CW,KAAKF,MAAMG,iBACZD,KAAKF,MAAMI,QAAQC,QAAQ,e,2CAM1BH,KAAKF,MAAMG,iBACZD,KAAKF,MAAMI,QAAQC,QAAQ,e,+BAiBrB,IAAD,EACqBH,KAAKb,MAAzBC,EADD,EACCA,MAAOC,EADR,EACQA,SACf,OACE,gCACE,cAAC,IAAD,CAASe,GAAIC,IAAMC,SAAnB,kBACA,gCACA,4CAEA,uBAAMC,SAAUP,KAAKL,aAArB,UACE,0CAEE,uBACEa,KAAK,QACLhB,KAAK,QACLC,MAAOL,EACPqB,SAAUT,KAAKV,kBAInB,6CAEE,uBACEkB,KAAK,WACLhB,KAAK,WACLC,MAAOJ,EACPoB,SAAUT,KAAKV,kBAInB,wBAAQkB,KAAK,SAAb,gC,GA5DeE,aAwEVC,uBALO,SAAAxB,GAAK,MAAG,CAC5Bc,gBAAiBd,EAAMyB,KAAKC,SAIU,CAAEd,QAASe,IAAeC,OAAnDJ,CAA4DzB","file":"static/js/4.eeb6a907.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport route from '../route';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport  authOperations  from '../redux/auth/authOperations';\r\n\r\n class LoginView extends Component {\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n  componentDidMount(){\r\n    if(this.props.isAuthenticated){\r\n      this.props.history.replace(\"/contacts\")\r\n\r\n      return\r\n    }\r\n  }\r\n  componentDidUpdate(){\r\n    if(this.props.isAuthenticated){\r\n      this.props.history.replace(\"/contacts\")\r\n\r\n      return\r\n    }\r\n  }\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onLogin({ ...this.state });\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n    return (\r\n      <div>\r\n        <NavLink to={route.HomeView}>back</NavLink>\r\n        <div>\r\n        <h1>Login page</h1>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label >\r\n            Email\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label >\r\n            Password\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps=state=>({\r\n  isAuthenticated: state.auth.token,\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { onLogin: authOperations.logIn })(LoginView);"],"sourceRoot":""}